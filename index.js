const express = require("express");
const app = express();
const axios = require("axios"); // ูู ุจุชุซุจูุช ูุฐู ุงูููุชุจุฉ: npm install axios
const dns = require('dns');     // ูุฐู ูุญุฏุฉ ูุถููุฉ ูู Node.js ูุนูููุงุช ุจุญุซ DNS

const PORT = process.env.PORT || 3000;

// ุนูุงููู URL ุงููุณุชูุฏูุฉ
const SAFE_PAGE = "https://treesaudia.wixstudio.com/website/blank-4"; // ุตูุญุฉ ุขููุฉ ููุฑูุจูุชุงุช
const GRAY_PAGE = "https://treesaudia.wixstudio.com/website";       // ุตูุญุฉ ุฑูุงุฏูุฉ ููุฒูุงุฑ ุงูุญูููููู

// ูุงุฆูุฉ ููุณุนุฉ ุจุงููููุงุช ุงูููุชุงุญูุฉ ููุฑูุจูุชุงุช ุงูุดุงุฆุนุฉุ ูุจุฑุงูุฌ ุงูุฒุญูุ ูุฎุฏูุงุช ุงููุฑุงูุจุฉ
const BOT_KEYWORDS = [
  "adsbot", "googlebot", "mediapartners-google", "bingbot", "yandexbot", "baiduspider",
  "crawler", "spider", "render", "wget", "curl", "python-requests", "node-fetch",
  "monitor", "uptimerobot", "pingdom", "gtmetrix", "lighthouse",
  "facebookexternalhit", "slackbot", "telegrambot", "discordbot", "preview",
  "ahrefsbot", "semrushbot", "mj12bot", "dotbot", "petalbot", "rogerbot", "exabot",
  "sitecheckerbot", "screaming frog", "netcraftsurvey", "prerender", "headlesschrome" // ุชูุช ุฅุถุงูุฉ ูุคุดุฑุงุช ุงููุชุตูุญุงุช ุจูุง ุฑุฃุณ
];

// ุฏุงูุฉ ูุณุงุนุฏุฉ ูุฅุฌุฑุงุก ุจุญุซ DNS ุงูุนูุณู ููุชุญูู ูู Googlebot
async function isGooglebotIP(ip) {
  return new Promise(resolve => {
    // ุญุงูู ููุท ุฅุฌุฑุงุก ุจุญุซ DNS ุงูุนูุณู ูู IPv4ุ DNS ุงูุนูุณู ูู IPv6 ูุฎุชูู
    if (!ip || !ip.includes('.')) { // ุชุญูู ุฃุณุงุณู ูู IPv4
        return resolve(false);
    }
    // ูุญุงููุฉ ุชุทุจูุน ุนูุงููู IPv6 ุฅุฐุง ูุฒู ุงูุฃูุฑุ ูููู ููุชุจุณูุท ุฑูุฒ ุนูู ุฑูุจูุชุงุช IPv4 ุงูุดุงุฆุนุฉ
    const parts = ip.split(':');
    const actualIp = parts[parts.length - 1]; // ุงุญุตู ุนูู ุงูุฌุฒุก ุงูุฃุฎูุฑ ุฅุฐุง ูุงู IPv6 ูุน ูููุฐ

    dns.reverse(actualIp, (err, hostnames) => {
      if (err) {
        // console.error(`ุฎุทุฃ ูู DNS ุงูุนูุณู ูู ${actualIp}:`, err.message);
        return resolve(false);
      }
      const isGoogle = hostnames.some(hostname =>
        hostname.endsWith('.googlebot.com') || hostname.endsWith('.google.com')
      );
      resolve(isGoogle);
    });
  });
}

// ุฏุงูุฉ ูุชุญุฏูุฏ ูุง ุฅุฐุง ูุงู ุงูุฒุงุฆุฑ ุฑูุจูุชูุง
async function isBot(req) {
  const ua = (req.headers['user-agent'] || "").toLowerCase();
  // ุงุญุตู ุนูู ุนููุงู IP ุงูุฃูุซุฑ ููุซูููุฉุ ูุน ุงูุฃุฎุฐ ูู ุงูุงุนุชุจุงุฑ ุงูุฎูุงุฏู ุงูููููุฉ (x-forwarded-for)
  const ip = req.headers['x-forwarded-for']?.split(',')[0].trim() || req.socket.remoteAddress || "";

  // 1. ูุญุต ุณูุณูุฉ ูููู ุงููุณุชุฎุฏู
  const isUserAgentBot = BOT_KEYWORDS.some(bot => ua.includes(bot));
  if (isUserAgentBot) return true;

  // 2. ุจุญุซ DNS ุงูุนูุณู ุนู Googlebot (ูุคุดุฑ ููู ูู Google)
  // ูุฐู ุงูุฏุงูุฉ ุบูุฑ ูุชุฒุงููุฉุ ูุฐุง ุงูุชุธุฑ ูุชูุฌุชูุง.
  const isReverseDNSGoogle = await isGooglebotIP(ip);
  if (isReverseDNSGoogle) return true;

  // ููููู ุฅุถุงูุฉ ุงููุฒูุฏ ูู ุงููุญูุตุงุช ููุงุ ุนูู ุณุจูู ุงููุซุงูุ ููุฏุงู ุฑุคูุณ ุงููุชุตูุญ ุงูุดุงุฆุนุฉุ
  // ุฃู ุฃููุงุท ูุดุจููุฉ ุฃุฎุฑู. ูู ุญุฐุฑูุง ูุนุฏู ุญุธุฑ ุงููุณุชุฎุฏููู ุงูุดุฑุนููู.

  return false; // ูู ูุชู ุงููุดู ุนูู ูุฑูุจูุช ุจูุฐู ุงูุทุฑู
}

// ุฏุงูุฉ ุจุณูุทุฉ ููุชุญูู ูู ุชูููุญุงุช ุฃุฎุฑู (ูุซู ุงูุฒูุงุฑ ูู ูุนุงููุงุช Facebook ุฃู Telegram)
function isSuspiciousTraffic(req) {
  const referer = (req.headers['referer'] || "").toLowerCase();
  // ุบุงูุจูุง ูุง ุชุณุชุฎุฏู ูุฐู ูู ูุจู ุฑูุจูุชุงุช ูุนุงููุฉ ูุณุงุฆู ุงูุชูุงุตู ุงูุงุฌุชูุงุนู ุฃู ูุงุณุญุงุช ุงูุฑูุงุจุท.
  return referer.includes("facebook.com") || referer.includes("t.co") || referer.includes("telegram");
}

// ุฏุงูุฉ ูุฌูุจ ุงููุญุชูู ูู ุนููุงู URL ูุณุชูุฏู ูุชูุฌููู ุฅูู ุงูุงุณุชุฌุงุจุฉ
async function proxyContent(targetUrl, req, res) {
  try {
    const headersToForward = {
      'User-Agent': req.headers['user-agent'],
      'Accept': req.headers['accept'],
      'Accept-Encoding': req.headers['accept-encoding'],
      'Accept-Language': req.headers['accept-language'],
      'Cookie': req.headers['cookie'] // ูู ุจุฅุนุงุฏุฉ ุชูุฌูู ูููุงุช ุชุนุฑูู ุงูุงุฑุชุจุงุท ุฅุฐุง ูุฒู ุงูุฃูุฑุ ูููู ูู ุญุฐุฑูุง ุจุดุฃู ุงูุฎุตูุตูุฉ
    };

    const response = await axios.get(targetUrl, {
      responseType: 'stream',
      headers: headersToForward, // ูู ุจุฅุนุงุฏุฉ ุชูุฌูู ุงูุฑุคูุณ ุฐุงุช ุงูุตูุฉ ุฅูู ุงููุฏู
      maxRedirects: 0 // ููุน axios ูู ุงุชุจุงุน ุชุญูููุงุช ุงููุณุงุฑ ุจููุณู
    });

    // ุงูุณุฎ ุงูุฑุคูุณ ุงูุฃุณุงุณูุฉ ูู ุงุณุชุฌุงุจุฉ ุงููุฏู ุฅูู ุงุณุชุฌุงุจุชู
    for (const key in response.headers) {
      const value = response.headers[key];
      // ุงุณุชุจุนุฏ ุฑุคูุณ ุงูููู ุงูุชู ูุง ุชุชุนูู ุจุงุณุชุฌุงุจุฉ ุงูุนููู
      if (!['connection', 'keep-alive', 'proxy-authenticate', 'proxy-authorization', 'te', 'trailers', 'transfer-encoding', 'upgrade', 'host'].includes(key.toLowerCase())) {
        res.setHeader(key, value);
      }
    }

    // ูู ุจุชุนููู ุฑูุฒ ุญุงูุฉ ููุงุณุจ (ุนูู ุณุจูู ุงููุซุงูุ 200 OK)
    res.status(response.status);

    // ูู ุจุชูุฌูู ุงูุจูุงูุงุช ูุจุงุดุฑุฉ ุฅูู ุงูุงุณุชุฌุงุจุฉ
    response.data.pipe(res);
  } catch (error) {
    console.error(`ุฎุทุฃ ูู ููุงูุฉ ุงููุญุชูู ูู ${targetUrl}:`, error.message);
    if (error.response) {
        res.status(error.response.status).send(`ุฎุทุฃ: ุชุนุฐุฑ ุชุญููู ุงููุญุชูู ูู ${targetUrl}`);
    } else {
        res.status(500).send("ุฎุทุฃ ูู ุชุญููู ุงูุตูุญุฉ.");
    }
  }
}

app.get("/", async (req, res) => {
  const ua = req.headers['user-agent'] || "no-agent";
  const ip = req.headers['x-forwarded-for']?.split(',')[0].trim() || req.socket.remoteAddress || "no-ip";

  console.log(`[${new Date().toISOString()}] ูููู ุงููุณุชุฎุฏู: ${ua} | IP: ${ip}`);

  // ูู ุจุฅุฏุฎุงู ุชุฃุฎูุฑ ุนุดูุงุฆู ููุญุงูุงุฉ ุณููู ุงูุชุตูุญ ุงูุจุดุฑูุ
  // ูููู ุงุฌุนูู ูุตูุฑูุง ุจูุง ูููู ูุนุฏู ุงูุชุณุจุจ ูู ุงูุชูุงุก ุงููููุฉ ูุจุฑุงูุฌ ุงูุฒุญู ุงูุดุฑุนูุฉ.
  await new Promise(resolve => setTimeout(resolve, Math.floor(Math.random() * 500) + 100)); // ุจูู 100 ูููู ุซุงููุฉ ู 600 ูููู ุซุงููุฉ

  // ุญุฏุฏ ูุง ุฅุฐุง ูุงู ุฑูุจูุชูุง ุฃู ุญุฑูุฉ ูุฑูุฑ ูุดุจููุฉ
  const isDetectedBot = await isBot(req); // ุงูุชุธุฑ ูุชูุฌุฉ ุงูุฏุงูุฉ ุบูุฑ ุงููุชุฒุงููุฉ
  const isDetectedSuspiciousTraffic = isSuspiciousTraffic(req);

  if (isDetectedBot || isDetectedSuspiciousTraffic) {
    console.log("๐ก๏ธ ุชู ุงูุชุดุงู ุฑูุจูุช/ุญุฑูุฉ ูุฑูุฑ ูุดุจููุฉ - ููุงูุฉ ุตูุญุฉ SAFE");
    await proxyContent(SAFE_PAGE, req, res); // ููุงูุฉ ุงูุตูุญุฉ ุงูุขููุฉ
  } else {
    console.log("๐ค ูุณุชุฎุฏู ุจุดุฑู - ููุงูุฉ ุตูุญุฉ GRAY");
    await proxyContent(GRAY_PAGE, req, res); // ููุงูุฉ ุงูุตูุญุฉ ุงูุฑูุงุฏูุฉ
  }
});

// ุจุฏุก ุงูุฎุงุฏู
app.listen(PORT, () => {
  console.log(`๐ ุงูุฎุงุฏู ูุนูู ุนูู ุงููููุฐ ${PORT}`);
});
